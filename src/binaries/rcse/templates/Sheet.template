import QtQuick
import QtQuick.Layouts
import QtQuick.Controls
import Rolisteam
import charactersheet
import Qt.labs.qmlmodels
import Helper
{{ imports }}

Item {
    id: root

    SheetController {
        id: sheetCtrl
        appCtrl: AppCtrl
        parentWidth: root.width
        imageBgWidth: {{ baseWidth }}
        currentPage: 0
        zoomLevel: {{ defaultZoomLevel }}
        adaptWidthToPage: {{ pageAdapt }}
        pageMax: {{ pageMax }}
        characterSheetCtrl: _characterSheet
        characterId: _characterId
    }
    ContextualMenu {
        id: _menu
        ctrl: sheetCtrl
        defaultZoom: {{ defaultZoomLevel }}
    }

    Keys.onLeftPressed: sheetCtrl.previousPage()
    Keys.onRightPressed: sheetCtrl.nextPage()

    MouseArea {
        anchors.fill:parent
        acceptedButtons: Qt.LeftButton | Qt.RightButton
        onClicked: (mouse)=>{
            if(mouse.button & Qt.LeftButton)
                root.focus = true
            else if(mouse.button & Qt.RightButton)
            {
                _menu.x = mouse.x
                _menu.y = mouse.y
                _menu.open()
            }
        }
    }

    Flickable {
        id: flickable
        contentWidth:  sheet.width * sheetCtrl.zoomLevel
        contentHeight: sheet.height * sheetCtrl.zoomLevel
        boundsBehavior: Flickable.StopAtBounds
        anchors.fill: parent
        focus: true
        scale: sheetCtrl.zoomLevel
        transformOrigin: Item.TopLeft
        Item {
            id: sheet
            width: {{ width }}
            height:  {{ height }}
            {{ headCode }}

            {{ mainItem }} {
                id: main
                objectName: "main"
                anchors.fill: parent
                {{ mainSource }}
                {{ fields }}
            }
        }

    }


{{ bottomCode }}

}
